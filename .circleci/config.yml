version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
  destroy_environments: 
    steps:
      - run: 
          name: destroy infrastructure
          command: |
            aws cloudformation destroy-stack myStack-${CIRCLE_WORKFLOW_ID:0:7}
          when: on_fail

jobs:
  create_infrastructure:  
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout 
      - run: 
          name: "Create Cloud Formation Infra"
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region $AWS_DEFAULT_REGION
      
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["3f:de:1b:5a:67:fb:ed:53:a4:98:d5:ac:37:42:6a:dd"] 
      - run:
          name: "Install Ansible"
          command: apk add --update ansible
      - run: 
          name: "Run playbook and configure servers"
          command: |
            ansible-playbook -i inventory main.yml
  smoke_test:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run: apk add --update curl
      - run: 
          name: "Smoke test"
          command: |
            URL="https://blog.udacity12312.com/"
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environments
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure:
      #     requires: 
      #       - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure